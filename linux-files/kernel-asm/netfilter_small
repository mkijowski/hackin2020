
netfilter_lkm.ko:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <.text>:
   0:	e8 00 00 00 00       	callq  5 <.text+0x5>
   5:	48 83 fe 02          	cmp    $0x2,%rsi
   9:	74 03                	je     e <.text+0xe>
   b:	31 c0                	xor    %eax,%eax
   d:	c3                   	retq   
   e:	48 81 c2 a0 00 00 00 	add    $0xa0,%rdx
  15:	53                   	push   %rbx
  16:	48 89 d3             	mov    %rdx,%rbx
  19:	0f 84 00 00 00 00    	je     1f <.text+0x1f>
  1f:	48 8d bb 80 00 00 00 	lea    0x80(%rbx),%rdi
  26:	e8 00 00 00 00       	callq  2b <.text+0x2b>
  2b:	48 8b 1b             	mov    (%rbx),%rbx
  2e:	48 85 db             	test   %rbx,%rbx
  31:	0f 84 00 00 00 00    	je     37 <.text+0x37>
  37:	eb e6                	jmp    1f <.text+0x1f>
  39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  40:	e8 00 00 00 00       	callq  45 <.text+0x45>
  45:	53                   	push   %rbx
  46:	48 83 ec 18          	sub    $0x18,%rsp
  4a:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
  51:	00 00 
  53:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  58:	31 c0                	xor    %eax,%eax
  5a:	48 85 f6             	test   %rsi,%rsi
  5d:	74 38                	je     97 <.text+0x97>
  5f:	0f b7 8e c4 00 00 00 	movzwl 0xc4(%rsi),%ecx
  66:	48 03 8e e0 00 00 00 	add    0xe0(%rsi),%rcx
  6d:	0f b6 51 09          	movzbl 0x9(%rcx),%edx
  71:	80 fa 11             	cmp    $0x11,%dl
  74:	0f 84 00 00 00 00    	je     7a <.text+0x7a>
  7a:	31 c0                	xor    %eax,%eax
  7c:	80 fa 06             	cmp    $0x6,%dl
  7f:	74 1d                	je     9e <.text+0x9e>
  81:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
  86:	65 48 33 1c 25 28 00 	xor    %gs:0x28,%rbx
  8d:	00 00 
  8f:	75 61                	jne    f2 <.text+0xf2>
  91:	48 83 c4 18          	add    $0x18,%rsp
  95:	5b                   	pop    %rbx
  96:	c3                   	retq   
  97:	b8 01 00 00 00       	mov    $0x1,%eax
  9c:	eb e3                	jmp    81 <.text+0x81>
  9e:	48 89 e3             	mov    %rsp,%rbx
  a1:	48 83 c1 0c          	add    $0xc,%rcx
  a5:	be 10 00 00 00       	mov    $0x10,%esi
  aa:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
  b1:	48 89 df             	mov    %rbx,%rdi
  b4:	e8 00 00 00 00       	callq  b9 <.text+0xb9>
  b9:	b9 0e 00 00 00       	mov    $0xe,%ecx
  be:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
  c5:	48 89 de             	mov    %rbx,%rsi
  c8:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
  ca:	0f 97 c0             	seta   %al
  cd:	1c 00                	sbb    $0x0,%al
  cf:	84 c0                	test   %al,%al
  d1:	74 07                	je     da <.text+0xda>
  d3:	b8 01 00 00 00       	mov    $0x1,%eax
  d8:	eb a7                	jmp    81 <.text+0x81>
  da:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # e1 <.text+0xe1>
  e1:	ba 00 10 00 00       	mov    $0x1000,%edx
  e6:	be c0 00 60 00       	mov    $0x6000c0,%esi
  eb:	e8 00 00 00 00       	callq  f0 <.text+0xf0>
  f0:	eb e8                	jmp    da <.text+0xda>
  f2:	e8 00 00 00 00       	callq  f7 <task+0xe7>

Disassembly of section .text.unlikely:

0000000000000000 <.text.unlikely>:
   0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
   7:	e8 00 00 00 00       	callq  c <.text.unlikely+0xc>
   c:	e8 00 00 00 00       	callq  11 <.text.unlikely+0x11>
  11:	31 c0                	xor    %eax,%eax
  13:	5b                   	pop    %rbx
  14:	c3                   	retq   
  15:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
  1c:	e8 00 00 00 00       	callq  21 <.text.unlikely+0x21>
  21:	b8 01 00 00 00       	mov    $0x1,%eax
  26:	e9 00 00 00 00       	jmpq   2b <task+0x1b>

Disassembly of section .init.text:

0000000000000000 <init_module>:
   0:	e8 00 00 00 00       	callq  5 <init_module+0x5>
   5:	53                   	push   %rbx
   6:	ba 28 00 00 00       	mov    $0x28,%edx
   b:	be c0 80 60 00       	mov    $0x6080c0,%esi
  10:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 17 <init_module+0x17>
  17:	e8 00 00 00 00       	callq  1c <init_module+0x1c>
  1c:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 23 <init_module+0x23>
  23:	48 85 c0             	test   %rax,%rax
  26:	75 16                	jne    3e <init_module+0x3e>
  28:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
  2f:	e8 00 00 00 00       	callq  34 <init_module+0x34>
  34:	b8 f4 ff ff ff       	mov    $0xfffffff4,%eax
  39:	e9 91 00 00 00       	jmpq   cf <init_module+0xcf>
  3e:	b9 01 00 00 00       	mov    $0x1,%ecx
  43:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  4a:	48 89 c6             	mov    %rax,%rsi
  4d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
  54:	48 c1 e1 3f          	shl    $0x3f,%rcx
  58:	c6 40 18 02          	movb   $0x2,0x18(%rax)
  5c:	48 c7 c3 00 00 00 00 	mov    $0x0,%rbx
  63:	48 89 48 1c          	mov    %rcx,0x1c(%rax)
  67:	e8 00 00 00 00       	callq  6c <init_module+0x6c>
  6c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
  73:	e8 00 00 00 00       	callq  78 <init_module+0x78>
  78:	48 c7 05 00 00 00 00 	movq   $0x0,0x0(%rip)        # 83 <init_module+0x83>
  7f:	00 00 00 00 
  83:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 8a <init_module+0x8a>
  8a:	48 8b b8 00 08 00 00 	mov    0x800(%rax),%rdi
  91:	48 8d 87 00 f8 ff ff 	lea    -0x800(%rdi),%rax
  98:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 9f <init_module+0x9f>
  9f:	48 3d 00 00 00 00    	cmp    $0x0,%rax
  a5:	74 1a                	je     c1 <init_module+0xc1>
  a7:	48 81 c7 e0 02 00 00 	add    $0x2e0,%rdi
  ae:	48 89 de             	mov    %rbx,%rsi
  b1:	e8 00 00 00 00       	callq  b6 <init_module+0xb6>
  b6:	85 c0                	test   %eax,%eax
  b8:	75 c9                	jne    83 <init_module+0x83>
  ba:	e8 00 00 00 00       	callq  bf <init_module+0xbf>
  bf:	eb c2                	jmp    83 <init_module+0x83>
  c1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
  c8:	e8 00 00 00 00       	callq  cd <init_module+0xcd>
  cd:	31 c0                	xor    %eax,%eax
  cf:	5b                   	pop    %rbx
  d0:	c3                   	retq   

Disassembly of section .exit.text:

0000000000000000 <cleanup_module>:
   0:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 7 <cleanup_module+0x7>
   7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
   e:	e8 00 00 00 00       	callq  13 <cleanup_module+0x13>
  13:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 1a <cleanup_module+0x1a>
  1a:	e8 00 00 00 00       	callq  1f <cleanup_module+0x1f>
  1f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
  26:	e8 00 00 00 00       	callq  2b <cleanup_module+0x2b>
  2b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
  32:	e9 00 00 00 00       	jmpq   37 <task+0x27>
